name: CI
on:
  push:
  pull_request:

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Test
        run: cargo test --verbose

      - name: Clippy
        run: cargo clippy --verbose -- -D warnings

      - name: Audit
        run: cargo audit

  compile:
    name: Compile
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: check

    steps:
      - uses: actions/checkout@v3

      - name: Install rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Compile
        run: cargo build --release

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: libc_swc
          path: |
            target/release/libc_*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: compile
    if: github.event_name == 'push'

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: libc_swc
          path: artifact

      - uses: dev-drprasad/delete-tag-and-release@8cd619d00037e4aeb781909c9a6b03940507d0da
        with:
          delete_release: true
          tag_name: nightly
          github_token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get short SHA
        id: vars
        run: echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

      - name: Create the release
        uses: softprops/action-gh-release@c9b46fe7aad9f02afd89b12450b780f52dacfb2d
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          name: Nightly Build ${{ steps.vars.outputs.sha_short }}
          draft: false
          prerelease: false
          files: |
            artifact/libc_*
